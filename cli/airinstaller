#!/usr/bin/perl -w

# Copyright 2008 Ivan BabroÅ­ (email : ibobrik@gmail.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the license, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

use Archive::Zip qw(:ERROR_CODES);
use Archive::Zip::MemberRead;


my $install_dest = '/opt/AirApps';
my $install_desktop = 0;


sub get_appinfo
{
	my $zip = Archive::Zip->new();
	print "[installer] Getting air application info...\n";
	$zip->read($_[0]) == AZ_OK or die "Can't read air archive: $!\n";
	my $fh = Archive::Zip::MemberRead->new($zip, 'META-INF/AIR/application.xml');
	my $line = '';
	my %hash;
	# incorrect handling if file have commented xml at the beginning
	while (defined($line = $fh->getline()))
	{
		if (!defined($hash{'Name'}) and $line =~ /<name>(.*)<\/name>/)
		{
			$hash{'Name'} = $1;
		} elsif (!defined($hash{'Description'}) and $line =~ /<description>(.*)<\/description>/)
		{
			$hash{'Description'} = $1;
		} elsif (!defined($hash{'Version'}) and $line =~ /<version>(.*)<\/version>/)
		{
			$hash{'Version'} = $1;
		} elsif ($line =~ /<image(\d{2,3})x\1>(.*)<\/image\1x\1>/)
		{
			if (!defined($hash{'icons'}->{$1}))
			{
				$hash{'icons'}->{$1} = $2;
			}
		}
	}
	$fh->close();
	if (!defined($hash{'Name'}))
	{
		die "[error] not valid air package!\n";
	}
	return \%hash;
}

sub generate_desktop
{
	my $hash = $_[0];
	my $desktop = "[Desktop Entry]\n";
	foreach(('Name', 'Description', 'Version'))
	{
		$desktop .= $_.'='.$hash->{$_}."\n"
	}
	$desktop .= "Type=Application\n";
	$desktop .= "Categories=Utility;\n";
	$desktop .= "Exec=airstart $hash->{'Name'}\n";
	my $icon = 0;
	if (defined($hash->{'icons'}))
	{
		my @sizes = keys %{$hash->{'icons'}};
		my $max = $sizes[0];
		foreach (@sizes)
		{
			$max = $_ if $_ > $max;
		}
		$desktop .= "Icon=$hash->{'Name'}\n";
		$hash->{'icons'}->{$max} =~ /.*\.(.+)/;
		my $ext = '.'.$1;
		use File::Copy;
		$icon = '/usr/share/pixmaps/'.$hash->{'Name'}.$ext;
		copy($install_dest.'/'.$hash->{'Name'}.'/'.$hash->{'icons'}->{$max}, '/usr/share/pixmaps/'.$hash->{'Name'}.$ext)
			or die "[error] can't copy icon file: $!\n";
	}
	open(DESKTOP, '>/usr/share/applications/adobe_air_'.$hash->{'Name'}.'.desktop')
		or die "[error] can't write desktop file: $!\n";
	print DESKTOP $desktop;
	close(DESKTOP) or die "[error] can't write desktop file: $1\n";
	open(PACKAGEINFO, '>'.$install_dest.'/'.$hash->{'Name'}.'/airpackageinfo') or die "[error] can't write package info: $!\n";
	print PACKAGEINFO "/usr/share/applications/adobe_air_$hash->{'Name'}.desktop\n";
	if ($icon)
	{
		print PACKAGEINFO "$icon\n";
	}
	close(PACKAGEINFO);
}

sub install_package
{
	$hash = $_[1];
	if (!-d $install_dest)
	{
		die "[error] installation root does not exist: $install_dest\n"
	}
	print "[installer] installing package to $install_dest/$hash->{'Name'}\n";
	my $zip = Archive::Zip->new();
	$zip->read($_[0]) == AZ_OK or die "Can't read air archive: $!\n";
	if (-d $install_dest.'/'.$hash->{'Name'})
	{
		die "[error] directory $install_dest/$hash->{'Name'} already exists! please remove it first!\n";
	}
	mkdir($install_dest.'/'.$hash->{'Name'}) or die "[error] can't create $install_dest/$hash->{'Name'}: $!\n";
	$zip->extractTree('', $install_dest.'/'.$hash->{'Name'}.'/') == AZ_OK or die "[error] can't install package!";
}

sub set_options
{
	while (defined($ARGV[0]) and index($ARGV[0], '-') == 0)
	{
		if ($ARGV[0] eq '-d')
		{
			shift @ARGV;
			$install_dest = shift @ARGV;
		} elsif ($ARGV[0] eq '-f')
		{
			shift @ARGV;
			$install_desktop = 1;
		}
	}
}


set_options();

if (!defined($ARGV[0]))
{
	print "Usage: airinstaller [options] <air_app.air>\n";
	die "Options:\n  -f  install .desktop file\n  -d  installation destination (default: $install_dest)\n";
}

if (!-f $ARGV[0])
{
	die "[error] can't open air package!\n";
}

my $hash = get_appinfo($ARGV[0]);
install_package($ARGV[0], $hash);
if ($install_desktop)
{
	generate_desktop($hash);
}